//! This code was AUTOGENERATED using the kinobi library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun kinobi to update it.
//!
//! [https://github.com/metaplex-foundation/kinobi]
//!



/// Accounts.
pub struct DeprecatedSetReservationList {
      /// Master Edition V1 key (pda of ['metadata', program id, mint id, 'edition'])

        pub master_edition: Pubkey;
        /// PDA for ReservationList of ['metadata', program id, master edition key, 'reservation', resource-key]

        pub reservation_list: Pubkey;
        /// The resource you tied the reservation list too

        pub resource: Pubkey;
  }

      
impl struct DeprecatedSetReservationList {
  pub fn instruction(&self) -> solana_program::instruction::Instruction {
    solana_program::instruction::Instruction {
      program_id: crate::ID,
      accounts: vec![
                                                  solana_program::instruction::AccountMeta::new(
            self.master_edition,
            false
          ),
                                                  solana_program::instruction::AccountMeta::new(
            self.reservation_list,
            false
          ),
                                                  solana_program::instruction::AccountMeta::new_readonly(
            self.resource,
            true
          ),
              ],
      data: DeprecatedSetReservationList.try_to_vec().unwrap(),
    }
  }
}

/// Instruction builder.
#[derive(Default)]
pub struct DeprecatedSetReservationListBuilder {
  master_edition: Option<Pubkey>;
    reservation_list: Option<Pubkey>;
    resource: Option<Pubkey>;
  }

impl DeprecatedSetReservationListBuilder {
  pub fn new() -> Self {
    Self::default()
  }
      pub fn master_edition(&mut self, master_edition: solana_program::pubkey::Pubkey) -> &mut Self {
      self.master_edition = Some(master_edition);
      
      self
    }
      pub fn reservation_list(&mut self, reservation_list: solana_program::pubkey::Pubkey) -> &mut Self {
      self.reservation_list = Some(reservation_list);
      
      self
    }
      pub fn resource(&mut self, resource: solana_program::pubkey::Pubkey) -> &mut Self {
      self.resource = Some(resource);
      
      self
    }
    pub fn build(&self) -> solana_program::instruction::Instruction {
        let accounts = DeprecatedSetReservationList {
                  master_edition: self.master_edition,
                            reservation_list: self.reservation_list,
                            resource: self.resource,
                      };
    accounts.instruction()
  }
}

