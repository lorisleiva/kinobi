/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import {
  Codec,
  Decoder,
  Encoder,
  ReadonlyUint8Array,
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getUtf8Decoder,
  getUtf8Encoder,
} from '@solana/web3.js';

/** Hidden settings for large mints used with off-chain data. */
export type HiddenSettings = {
  /** Asset prefix name */
  name: string;
  /** Shared URI */
  uri: string;
  /** Hash of the hidden settings file */
  hash: ReadonlyUint8Array;
};

export type HiddenSettingsArgs = HiddenSettings;

export function getHiddenSettingsEncoder(): Encoder<HiddenSettingsArgs> {
  return getStructEncoder([
    ['name', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
    ['uri', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
    ['hash', fixEncoderSize(getBytesEncoder(), 64)],
  ]);
}

export function getHiddenSettingsDecoder(): Decoder<HiddenSettings> {
  return getStructDecoder([
    ['name', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
    ['uri', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
    ['hash', fixDecoderSize(getBytesDecoder(), 64)],
  ]);
}

export function getHiddenSettingsCodec(): Codec<
  HiddenSettingsArgs,
  HiddenSettings
> {
  return combineCodec(getHiddenSettingsEncoder(), getHiddenSettingsDecoder());
}
