/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Codec, Decoder, Encoder, combineCodec } from '@solana/codecs-core';
import {
  getStructDecoder,
  getStructEncoder,
} from '@solana/codecs-data-structures';
import { getStringDecoder, getStringEncoder } from '@solana/codecs-strings';

/** Config line struct for storing asset (NFT) data pre-mint. */
export type ConfigLine = {
  /** Name of the asset. */
  name: string;
  /** URI to JSON metadata. */
  uri: string;
};

export type ConfigLineArgs = ConfigLine;

export function getConfigLineEncoder(): Encoder<ConfigLineArgs> {
  return getStructEncoder<ConfigLine>(
    [
      ['name', getStringEncoder()],
      ['uri', getStringEncoder()],
    ],
    { description: 'ConfigLine' }
  ) as Encoder<ConfigLineArgs>;
}

export function getConfigLineDecoder(): Decoder<ConfigLine> {
  return getStructDecoder<ConfigLine>(
    [
      ['name', getStringDecoder()],
      ['uri', getStringDecoder()],
    ],
    { description: 'ConfigLine' }
  ) as Decoder<ConfigLine>;
}

export function getConfigLineCodec(): Codec<ConfigLineArgs, ConfigLine> {
  return combineCodec(getConfigLineEncoder(), getConfigLineDecoder());
}
