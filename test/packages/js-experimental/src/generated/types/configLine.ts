/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import {
  Codec,
  Decoder,
  Encoder,
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getUtf8Decoder,
  getUtf8Encoder,
} from '@solana/codecs';

/** Config line struct for storing asset (NFT) data pre-mint. */
export type ConfigLine = {
  /** Name of the asset. */
  name: string;
  /** URI to JSON metadata. */
  uri: string;
};

export type ConfigLineArgs = ConfigLine;

export function getConfigLineEncoder(): Encoder<ConfigLineArgs> {
  return getStructEncoder([
    ['name', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
    ['uri', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
  ]);
}

export function getConfigLineDecoder(): Decoder<ConfigLine> {
  return getStructDecoder([
    ['name', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
    ['uri', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
  ]);
}

export function getConfigLineCodec(): Codec<ConfigLineArgs, ConfigLine> {
  return combineCodec(getConfigLineEncoder(), getConfigLineDecoder());
}
