/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Codec, Decoder, Encoder, combineCodec } from '@solana/codecs-core';
import {
  getBooleanDecoder,
  getBooleanEncoder,
  getStructDecoder,
  getStructEncoder,
} from '@solana/codecs-data-structures';
import { getU32Decoder, getU32Encoder } from '@solana/codecs-numbers';
import { getStringDecoder, getStringEncoder } from '@solana/codecs-strings';

/** Config line settings to allocate space for individual name + URI. */
export type ConfigLineSettings = {
  /** Common name prefix */
  prefixName: string;
  /** Length of the remaining part of the name */
  nameLength: number;
  /** Common URI prefix */
  prefixUri: string;
  /** Length of the remaining part of the URI */
  uriLength: number;
  /** Indicates whether to use a senquential index generator or not */
  isSequential: boolean;
};

export type ConfigLineSettingsArgs = ConfigLineSettings;

export function getConfigLineSettingsEncoder(): Encoder<ConfigLineSettingsArgs> {
  return getStructEncoder<ConfigLineSettings>(
    [
      ['prefixName', getStringEncoder()],
      ['nameLength', getU32Encoder()],
      ['prefixUri', getStringEncoder()],
      ['uriLength', getU32Encoder()],
      ['isSequential', getBooleanEncoder()],
    ],
    { description: 'ConfigLineSettings' }
  ) as Encoder<ConfigLineSettingsArgs>;
}

export function getConfigLineSettingsDecoder(): Decoder<ConfigLineSettings> {
  return getStructDecoder<ConfigLineSettings>(
    [
      ['prefixName', getStringDecoder()],
      ['nameLength', getU32Decoder()],
      ['prefixUri', getStringDecoder()],
      ['uriLength', getU32Decoder()],
      ['isSequential', getBooleanDecoder()],
    ],
    { description: 'ConfigLineSettings' }
  ) as Decoder<ConfigLineSettings>;
}

export function getConfigLineSettingsCodec(): Codec<
  ConfigLineSettingsArgs,
  ConfigLineSettings
> {
  return combineCodec(
    getConfigLineSettingsEncoder(),
    getConfigLineSettingsDecoder()
  );
}
