/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Codec, Decoder, Encoder, combineCodec } from '@solana/codecs-core';
import {
  GetDataEnumKind,
  GetDataEnumKindContent,
  getDataEnumDecoder,
  getDataEnumEncoder,
  getStructDecoder,
  getStructEncoder,
  getUnitDecoder,
  getUnitEncoder,
} from '@solana/codecs-data-structures';
import { getU64Decoder, getU64Encoder } from '@solana/codecs-numbers';

export type DelegateArgs =
  | { __kind: 'CollectionV1' }
  | { __kind: 'SaleV1'; amount: bigint }
  | { __kind: 'TransferV1'; amount: bigint };

export type DelegateArgsArgs =
  | { __kind: 'CollectionV1' }
  | { __kind: 'SaleV1'; amount: number | bigint }
  | { __kind: 'TransferV1'; amount: number | bigint };

export function getDelegateArgsEncoder() {
  return getDataEnumEncoder<DelegateArgsArgs>([
    ['CollectionV1', getUnitEncoder()],
    [
      'SaleV1',
      getStructEncoder<GetDataEnumKindContent<DelegateArgsArgs, 'SaleV1'>>([
        ['amount', getU64Encoder()],
      ]),
    ],
    [
      'TransferV1',
      getStructEncoder<GetDataEnumKindContent<DelegateArgsArgs, 'TransferV1'>>([
        ['amount', getU64Encoder()],
      ]),
    ],
  ]) satisfies Encoder<DelegateArgsArgs>;
}

export function getDelegateArgsDecoder() {
  return getDataEnumDecoder<DelegateArgs>([
    ['CollectionV1', getUnitDecoder()],
    [
      'SaleV1',
      getStructDecoder<GetDataEnumKindContent<DelegateArgs, 'SaleV1'>>([
        ['amount', getU64Decoder()],
      ]),
    ],
    [
      'TransferV1',
      getStructDecoder<GetDataEnumKindContent<DelegateArgs, 'TransferV1'>>([
        ['amount', getU64Decoder()],
      ]),
    ],
  ]) satisfies Decoder<DelegateArgs>;
}

export function getDelegateArgsCodec(): Codec<DelegateArgsArgs, DelegateArgs> {
  return combineCodec(getDelegateArgsEncoder(), getDelegateArgsDecoder());
}

// Data Enum Helpers.
export function delegateArgs(
  kind: 'CollectionV1'
): GetDataEnumKind<DelegateArgsArgs, 'CollectionV1'>;
export function delegateArgs(
  kind: 'SaleV1',
  data: GetDataEnumKindContent<DelegateArgsArgs, 'SaleV1'>
): GetDataEnumKind<DelegateArgsArgs, 'SaleV1'>;
export function delegateArgs(
  kind: 'TransferV1',
  data: GetDataEnumKindContent<DelegateArgsArgs, 'TransferV1'>
): GetDataEnumKind<DelegateArgsArgs, 'TransferV1'>;
export function delegateArgs<K extends DelegateArgsArgs['__kind']>(
  kind: K,
  data?: any
): Extract<DelegateArgsArgs, { __kind: K }> {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}

export function isDelegateArgs<K extends DelegateArgs['__kind']>(
  kind: K,
  value: DelegateArgs
): value is DelegateArgs & { __kind: K } {
  return value.__kind === kind;
}
