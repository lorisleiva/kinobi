/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Codec, Decoder, Encoder, combineCodec } from '@solana/codecs-core';
import {
  getScalarEnumDecoder,
  getScalarEnumEncoder,
} from '@solana/codecs-data-structures';

export enum TokenState {
  Uninitialized,
  Initialized,
  Frozen,
}

export type TokenStateArgs = TokenState;

export function getTokenStateEncoder(): Encoder<TokenStateArgs> {
  return getScalarEnumEncoder<TokenState>(TokenState, {
    description: 'TokenState',
  }) as Encoder<TokenStateArgs>;
}

export function getTokenStateDecoder(): Decoder<TokenState> {
  return getScalarEnumDecoder<TokenState>(TokenState, {
    description: 'TokenState',
  }) as Decoder<TokenState>;
}

export function getTokenStateCodec(): Codec<TokenStateArgs, TokenState> {
  return combineCodec(getTokenStateEncoder(), getTokenStateDecoder());
}
