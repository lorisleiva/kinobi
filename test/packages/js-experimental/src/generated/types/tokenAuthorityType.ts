/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Codec, Decoder, Encoder, combineCodec } from '@solana/codecs-core';
import {
  getScalarEnumDecoder,
  getScalarEnumEncoder,
} from '@solana/codecs-data-structures';

export enum TokenAuthorityType {
  MintTokens,
  FreezeAccount,
  AccountOwner,
  CloseAccount,
}

export type TokenAuthorityTypeArgs = TokenAuthorityType;

export function getTokenAuthorityTypeEncoder(): Encoder<TokenAuthorityTypeArgs> {
  return getScalarEnumEncoder<TokenAuthorityType>(TokenAuthorityType, {
    description: 'TokenAuthorityType',
  }) as Encoder<TokenAuthorityTypeArgs>;
}

export function getTokenAuthorityTypeDecoder(): Decoder<TokenAuthorityType> {
  return getScalarEnumDecoder<TokenAuthorityType>(TokenAuthorityType, {
    description: 'TokenAuthorityType',
  }) as Decoder<TokenAuthorityType>;
}

export function getTokenAuthorityTypeCodec(): Codec<
  TokenAuthorityTypeArgs,
  TokenAuthorityType
> {
  return combineCodec(
    getTokenAuthorityTypeEncoder(),
    getTokenAuthorityTypeDecoder()
  );
}
