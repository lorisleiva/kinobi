/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Address } from '@solana/addresses';
import {
  MplTokenAuthRulesProgramError,
  MplTokenAuthRulesProgramErrorCode,
  getMplTokenAuthRulesProgramErrorFromCode,
} from '../errors';
import {
  Context,
  Program,
  ProgramWithErrors,
  getProgramAddress,
} from '../shared';

export const MPL_TOKEN_AUTH_RULES_PROGRAM_ADDRESS =
  'auth9SigNpDKz4sJJ1DfCTuZrZNSAgh9sFD3rboVmgg' as Address<'auth9SigNpDKz4sJJ1DfCTuZrZNSAgh9sFD3rboVmgg'>;

export type MplTokenAuthRulesProgram =
  Program<'auth9SigNpDKz4sJJ1DfCTuZrZNSAgh9sFD3rboVmgg'> &
    ProgramWithErrors<
      MplTokenAuthRulesProgramErrorCode,
      MplTokenAuthRulesProgramError
    >;

export function createMplTokenAuthRulesProgram(): MplTokenAuthRulesProgram {
  return {
    name: 'mplTokenAuthRules',
    address: MPL_TOKEN_AUTH_RULES_PROGRAM_ADDRESS,
    getErrorFromCode(code: MplTokenAuthRulesProgramErrorCode, cause?: Error) {
      return getMplTokenAuthRulesProgramErrorFromCode(code, cause);
    },
  };
}

export async function getMplTokenAuthRulesProgramAddress(
  context: Pick<Context, 'getProgramAddress'> = {}
): Promise<Address> {
  return getProgramAddress(
    context,
    'mplTokenAuthRules',
    MPL_TOKEN_AUTH_RULES_PROGRAM_ADDRESS
  );
}
