/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Base58EncodedAddress } from '@solana/addresses';
import {
  SplTokenProgramError,
  SplTokenProgramErrorCode,
  getSplTokenProgramErrorFromCode,
} from '../errors';
import {
  Context,
  Program,
  ProgramWithErrors,
  getProgramAddress,
} from '../shared';

export const SPL_TOKEN_PROGRAM_ADDRESS =
  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA' as Base58EncodedAddress<'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA'>;

export type SplTokenProgram =
  Program<'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA'> &
    ProgramWithErrors<SplTokenProgramErrorCode, SplTokenProgramError>;

export function createSplTokenProgram(): SplTokenProgram {
  return {
    name: 'splToken',
    address: SPL_TOKEN_PROGRAM_ADDRESS,
    getErrorFromCode(code: SplTokenProgramErrorCode, cause?: Error) {
      return getSplTokenProgramErrorFromCode(code, cause);
    },
  };
}

export async function getSplTokenProgramAddress(
  context: Pick<Context, 'getProgramAddress'> = {}
): Promise<Base58EncodedAddress> {
  return getProgramAddress(context, 'splToken', SPL_TOKEN_PROGRAM_ADDRESS);
}
