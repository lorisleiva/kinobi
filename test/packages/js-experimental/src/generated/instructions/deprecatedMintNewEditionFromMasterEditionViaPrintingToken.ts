/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Base58EncodedAddress, address } from '@solana/addresses';
import {
  Codec,
  Decoder,
  Encoder,
  combineCodec,
  mapEncoder,
} from '@solana/codecs-core';
import {
  getStructDecoder,
  getStructEncoder,
} from '@solana/codecs-data-structures';
import { getU8Decoder, getU8Encoder } from '@solana/codecs-numbers';
import {
  IInstruction,
  IInstructionWithAccounts,
  IInstructionWithData,
  ReadonlyAccount,
  ReadonlySignerAccount,
  WritableAccount,
} from '@solana/instructions';
import {
  Context,
  Pda,
  PublicKey,
  Signer,
  TransactionBuilder,
  transactionBuilder,
} from 'umi';
import { Serializer } from 'umiSerializers';
import {
  ResolvedAccount,
  ResolvedAccountsWithIndices,
  getAccountMetasAndSigners,
} from '../shared';

// Output.
export type DeprecatedMintNewEditionFromMasterEditionViaPrintingTokenInstruction<
  TProgram extends string = 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',
  TAccountMetadata extends string = string,
  TAccountEdition extends string = string,
  TAccountMasterEdition extends string = string,
  TAccountMint extends string = string,
  TAccountMintAuthority extends string = string,
  TAccountPrintingMint extends string = string,
  TAccountMasterTokenAccount extends string = string,
  TAccountEditionMarker extends string = string,
  TAccountBurnAuthority extends string = string,
  TAccountPayer extends string = string,
  TAccountMasterUpdateAuthority extends string = string,
  TAccountMasterMetadata extends string = string,
  TAccountTokenProgram extends string = 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',
  TAccountSystemProgram extends string = '11111111111111111111111111111111',
  TAccountRent extends string = 'SysvarRent111111111111111111111111111111111',
  TAccountReservationList extends string = string
> = IInstruction<TProgram> &
  IInstructionWithData<DeprecatedMintNewEditionFromMasterEditionViaPrintingTokenInstructionData> &
  IInstructionWithAccounts<
    [
      WritableAccount<TAccountMetadata>,
      WritableAccount<TAccountEdition>,
      WritableAccount<TAccountMasterEdition>,
      WritableAccount<TAccountMint>,
      ReadonlySignerAccount<TAccountMintAuthority>,
      WritableAccount<TAccountPrintingMint>,
      WritableAccount<TAccountMasterTokenAccount>,
      WritableAccount<TAccountEditionMarker>,
      ReadonlySignerAccount<TAccountBurnAuthority>,
      ReadonlySignerAccount<TAccountPayer>,
      ReadonlyAccount<TAccountMasterUpdateAuthority>,
      ReadonlyAccount<TAccountMasterMetadata>,
      ReadonlyAccount<TAccountTokenProgram>,
      ReadonlyAccount<TAccountSystemProgram>,
      ReadonlyAccount<TAccountRent>,
      WritableAccount<TAccountReservationList>
    ]
  >;

export type DeprecatedMintNewEditionFromMasterEditionViaPrintingTokenInstructionData =
  { discriminator: number };

export type DeprecatedMintNewEditionFromMasterEditionViaPrintingTokenInstructionDataArgs =
  {};

export function getDeprecatedMintNewEditionFromMasterEditionViaPrintingTokenInstructionDataEncoder(): Encoder<DeprecatedMintNewEditionFromMasterEditionViaPrintingTokenInstructionDataArgs> {
  return mapEncoder(
    getStructEncoder<DeprecatedMintNewEditionFromMasterEditionViaPrintingTokenInstructionData>(
      [['discriminator', getU8Encoder()]],
      {
        description:
          'DeprecatedMintNewEditionFromMasterEditionViaPrintingTokenInstructionData',
      }
    ),
    (value) =>
      ({
        ...value,
        discriminator: 3,
      } as DeprecatedMintNewEditionFromMasterEditionViaPrintingTokenInstructionData)
  ) as Encoder<DeprecatedMintNewEditionFromMasterEditionViaPrintingTokenInstructionDataArgs>;
}

export function getDeprecatedMintNewEditionFromMasterEditionViaPrintingTokenInstructionDataDecoder(): Decoder<DeprecatedMintNewEditionFromMasterEditionViaPrintingTokenInstructionData> {
  return getStructDecoder<DeprecatedMintNewEditionFromMasterEditionViaPrintingTokenInstructionData>(
    [['discriminator', getU8Decoder()]],
    {
      description:
        'DeprecatedMintNewEditionFromMasterEditionViaPrintingTokenInstructionData',
    }
  ) as Decoder<DeprecatedMintNewEditionFromMasterEditionViaPrintingTokenInstructionData>;
}

export function getDeprecatedMintNewEditionFromMasterEditionViaPrintingTokenInstructionDataCodec(): Codec<
  DeprecatedMintNewEditionFromMasterEditionViaPrintingTokenInstructionDataArgs,
  DeprecatedMintNewEditionFromMasterEditionViaPrintingTokenInstructionData
> {
  return combineCodec(
    getDeprecatedMintNewEditionFromMasterEditionViaPrintingTokenInstructionDataEncoder(),
    getDeprecatedMintNewEditionFromMasterEditionViaPrintingTokenInstructionDataDecoder()
  );
}

export function deprecatedMintNewEditionFromMasterEditionViaPrintingTokenInstruction<
  TProgram extends string = 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',
  TAccountMetadata extends string = string,
  TAccountEdition extends string = string,
  TAccountMasterEdition extends string = string,
  TAccountMint extends string = string,
  TAccountMintAuthority extends string = string,
  TAccountPrintingMint extends string = string,
  TAccountMasterTokenAccount extends string = string,
  TAccountEditionMarker extends string = string,
  TAccountBurnAuthority extends string = string,
  TAccountPayer extends string = string,
  TAccountMasterUpdateAuthority extends string = string,
  TAccountMasterMetadata extends string = string,
  TAccountTokenProgram extends string = 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',
  TAccountSystemProgram extends string = '11111111111111111111111111111111',
  TAccountRent extends string = 'SysvarRent111111111111111111111111111111111',
  TAccountReservationList extends string = string
>(
  accounts: {
    metadata: Base58EncodedAddress<TAccountMetadata>;
    edition: Base58EncodedAddress<TAccountEdition>;
    masterEdition: Base58EncodedAddress<TAccountMasterEdition>;
    mint: Base58EncodedAddress<TAccountMint>;
    mintAuthority: Base58EncodedAddress<TAccountMintAuthority>;
    printingMint: Base58EncodedAddress<TAccountPrintingMint>;
    masterTokenAccount: Base58EncodedAddress<TAccountMasterTokenAccount>;
    editionMarker: Base58EncodedAddress<TAccountEditionMarker>;
    burnAuthority: Base58EncodedAddress<TAccountBurnAuthority>;
    payer: Base58EncodedAddress<TAccountPayer>;
    masterUpdateAuthority: Base58EncodedAddress<TAccountMasterUpdateAuthority>;
    masterMetadata: Base58EncodedAddress<TAccountMasterMetadata>;
    tokenProgram: Base58EncodedAddress<TAccountTokenProgram>;
    systemProgram: Base58EncodedAddress<TAccountSystemProgram>;
    rent: Base58EncodedAddress<TAccountRent>;
    reservationList: Base58EncodedAddress<TAccountReservationList>;
  },
  programId: Base58EncodedAddress<TProgram> = 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s' as Base58EncodedAddress<TProgram>
): DeprecatedMintNewEditionFromMasterEditionViaPrintingTokenInstruction<
  TProgram,
  TAccountMetadata,
  TAccountEdition,
  TAccountMasterEdition,
  TAccountMint,
  TAccountMintAuthority,
  TAccountPrintingMint,
  TAccountMasterTokenAccount,
  TAccountEditionMarker,
  TAccountBurnAuthority,
  TAccountPayer,
  TAccountMasterUpdateAuthority,
  TAccountMasterMetadata,
  TAccountTokenProgram,
  TAccountSystemProgram,
  TAccountRent,
  TAccountReservationList
> {
  // ...
}
