/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Base58EncodedAddress } from '@solana/addresses';
import {
  Codec,
  Decoder,
  Encoder,
  combineCodec,
  mapEncoder,
} from '@solana/codecs-core';
import {
  getStructDecoder,
  getStructEncoder,
} from '@solana/codecs-data-structures';
import { getU8Decoder, getU8Encoder } from '@solana/codecs-numbers';
import {
  AccountRole,
  IAccountMeta,
  IInstruction,
  IInstructionWithAccounts,
  IInstructionWithData,
  ReadonlyAccount,
  WritableAccount,
  WritableSignerAccount,
} from '@solana/instructions';
import {
  Context,
  CustomGeneratedInstruction,
  Signer,
  WrappedInstruction,
  accountMetaWithDefault,
} from '../shared';

// Output.
export type RevokeCollectionAuthorityInstruction<
  TProgram extends string = 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',
  TAccountCollectionAuthorityRecord extends
    | string
    | IAccountMeta<string> = string,
  TAccountDelegateAuthority extends string | IAccountMeta<string> = string,
  TAccountRevokeAuthority extends string | IAccountMeta<string> = string,
  TAccountMetadata extends string | IAccountMeta<string> = string,
  TAccountMint extends string | IAccountMeta<string> = string
> = IInstruction<TProgram> &
  IInstructionWithData<Uint8Array> &
  IInstructionWithAccounts<
    [
      TAccountCollectionAuthorityRecord extends string
        ? WritableAccount<TAccountCollectionAuthorityRecord>
        : TAccountCollectionAuthorityRecord,
      TAccountDelegateAuthority extends string
        ? WritableAccount<TAccountDelegateAuthority>
        : TAccountDelegateAuthority,
      TAccountRevokeAuthority extends string
        ? WritableSignerAccount<TAccountRevokeAuthority>
        : TAccountRevokeAuthority,
      TAccountMetadata extends string
        ? ReadonlyAccount<TAccountMetadata>
        : TAccountMetadata,
      TAccountMint extends string ? ReadonlyAccount<TAccountMint> : TAccountMint
    ]
  >;

export type RevokeCollectionAuthorityInstructionData = {
  discriminator: number;
};

export type RevokeCollectionAuthorityInstructionDataArgs = {};

export function getRevokeCollectionAuthorityInstructionDataEncoder(): Encoder<RevokeCollectionAuthorityInstructionDataArgs> {
  return mapEncoder(
    getStructEncoder<RevokeCollectionAuthorityInstructionData>(
      [['discriminator', getU8Encoder()]],
      { description: 'RevokeCollectionAuthorityInstructionData' }
    ),
    (value) =>
      ({
        ...value,
        discriminator: 24,
      } as RevokeCollectionAuthorityInstructionData)
  ) as Encoder<RevokeCollectionAuthorityInstructionDataArgs>;
}

export function getRevokeCollectionAuthorityInstructionDataDecoder(): Decoder<RevokeCollectionAuthorityInstructionData> {
  return getStructDecoder<RevokeCollectionAuthorityInstructionData>(
    [['discriminator', getU8Decoder()]],
    { description: 'RevokeCollectionAuthorityInstructionData' }
  ) as Decoder<RevokeCollectionAuthorityInstructionData>;
}

export function getRevokeCollectionAuthorityInstructionDataCodec(): Codec<
  RevokeCollectionAuthorityInstructionDataArgs,
  RevokeCollectionAuthorityInstructionData
> {
  return combineCodec(
    getRevokeCollectionAuthorityInstructionDataEncoder(),
    getRevokeCollectionAuthorityInstructionDataDecoder()
  );
}

export function revokeCollectionAuthorityInstruction<
  TProgram extends string = 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',
  TAccountCollectionAuthorityRecord extends
    | string
    | IAccountMeta<string> = string,
  TAccountDelegateAuthority extends string | IAccountMeta<string> = string,
  TAccountRevokeAuthority extends string | IAccountMeta<string> = string,
  TAccountMetadata extends string | IAccountMeta<string> = string,
  TAccountMint extends string | IAccountMeta<string> = string
>(
  accounts: {
    collectionAuthorityRecord: TAccountCollectionAuthorityRecord extends string
      ? Base58EncodedAddress<TAccountCollectionAuthorityRecord>
      : TAccountCollectionAuthorityRecord;
    delegateAuthority: TAccountDelegateAuthority extends string
      ? Base58EncodedAddress<TAccountDelegateAuthority>
      : TAccountDelegateAuthority;
    revokeAuthority: TAccountRevokeAuthority extends string
      ? Base58EncodedAddress<TAccountRevokeAuthority>
      : TAccountRevokeAuthority;
    metadata: TAccountMetadata extends string
      ? Base58EncodedAddress<TAccountMetadata>
      : TAccountMetadata;
    mint: TAccountMint extends string
      ? Base58EncodedAddress<TAccountMint>
      : TAccountMint;
  },
  programAddress: Base58EncodedAddress<TProgram> = 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s' as Base58EncodedAddress<TProgram>
) {
  return {
    accounts: [
      accountMetaWithDefault(
        accounts.collectionAuthorityRecord,
        AccountRole.WRITABLE
      ),
      accountMetaWithDefault(accounts.delegateAuthority, AccountRole.WRITABLE),
      accountMetaWithDefault(
        accounts.revokeAuthority,
        AccountRole.WRITABLE_SIGNER
      ),
      accountMetaWithDefault(accounts.metadata, AccountRole.READONLY),
      accountMetaWithDefault(accounts.mint, AccountRole.READONLY),
    ],
    data: getRevokeCollectionAuthorityInstructionDataEncoder().encode({}),
    programAddress,
  } as RevokeCollectionAuthorityInstruction<
    TProgram,
    TAccountCollectionAuthorityRecord,
    TAccountDelegateAuthority,
    TAccountRevokeAuthority,
    TAccountMetadata,
    TAccountMint
  >;
}

// Input.
export type RevokeCollectionAuthorityInput<
  TAccountCollectionAuthorityRecord extends string,
  TAccountDelegateAuthority extends string,
  TAccountRevokeAuthority extends string,
  TAccountMetadata extends string,
  TAccountMint extends string
> = {
  /** Collection Authority Record PDA */
  collectionAuthorityRecord: Base58EncodedAddress<TAccountCollectionAuthorityRecord>;
  /** Delegated Collection Authority */
  delegateAuthority: Base58EncodedAddress<TAccountDelegateAuthority>;
  /** Update Authority, or Delegated Authority, of Collection NFT */
  revokeAuthority: Signer<TAccountRevokeAuthority>;
  /** Metadata account */
  metadata: Base58EncodedAddress<TAccountMetadata>;
  /** Mint of Metadata */
  mint: Base58EncodedAddress<TAccountMint>;
};

export async function revokeCollectionAuthority<
  TReturn,
  TProgram extends string = 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',
  TAccountCollectionAuthorityRecord extends string = string,
  TAccountDelegateAuthority extends string = string,
  TAccountRevokeAuthority extends string = string,
  TAccountMetadata extends string = string,
  TAccountMint extends string = string
>(
  context: Pick<Context, 'getProgramAddress'> &
    CustomGeneratedInstruction<
      RevokeCollectionAuthorityInstruction<
        TProgram,
        TAccountCollectionAuthorityRecord,
        TAccountDelegateAuthority,
        TAccountRevokeAuthority,
        TAccountMetadata,
        TAccountMint
      >,
      TReturn
    >,
  input: RevokeCollectionAuthorityInput<
    TAccountCollectionAuthorityRecord,
    TAccountDelegateAuthority,
    TAccountRevokeAuthority,
    TAccountMetadata,
    TAccountMint
  >
): Promise<TReturn>;
export async function revokeCollectionAuthority<
  TProgram extends string = 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',
  TAccountCollectionAuthorityRecord extends string = string,
  TAccountDelegateAuthority extends string = string,
  TAccountRevokeAuthority extends string = string,
  TAccountMetadata extends string = string,
  TAccountMint extends string = string
>(
  context: Pick<Context, 'getProgramAddress'>,
  input: RevokeCollectionAuthorityInput<
    TAccountCollectionAuthorityRecord,
    TAccountDelegateAuthority,
    TAccountRevokeAuthority,
    TAccountMetadata,
    TAccountMint
  >
): Promise<
  WrappedInstruction<
    RevokeCollectionAuthorityInstruction<
      TProgram,
      TAccountCollectionAuthorityRecord,
      TAccountDelegateAuthority,
      TAccountRevokeAuthority,
      TAccountMetadata,
      TAccountMint
    >
  >
>;
export async function revokeCollectionAuthority<
  TProgram extends string = 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',
  TAccountCollectionAuthorityRecord extends string = string,
  TAccountDelegateAuthority extends string = string,
  TAccountRevokeAuthority extends string = string,
  TAccountMetadata extends string = string,
  TAccountMint extends string = string
>(
  input: RevokeCollectionAuthorityInput<
    TAccountCollectionAuthorityRecord,
    TAccountDelegateAuthority,
    TAccountRevokeAuthority,
    TAccountMetadata,
    TAccountMint
  >
): Promise<
  WrappedInstruction<
    RevokeCollectionAuthorityInstruction<
      TProgram,
      TAccountCollectionAuthorityRecord,
      TAccountDelegateAuthority,
      TAccountRevokeAuthority,
      TAccountMetadata,
      TAccountMint
    >
  >
>;
export async function revokeCollectionAuthority<
  TReturn,
  TProgram extends string = 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',
  TAccountCollectionAuthorityRecord extends string = string,
  TAccountDelegateAuthority extends string = string,
  TAccountRevokeAuthority extends string = string,
  TAccountMetadata extends string = string,
  TAccountMint extends string = string
>(
  rawContext:
    | Pick<Context, 'getProgramAddress'>
    | (Pick<Context, 'getProgramAddress'> &
        CustomGeneratedInstruction<
          RevokeCollectionAuthorityInstruction<
            TProgram,
            TAccountCollectionAuthorityRecord,
            TAccountDelegateAuthority,
            TAccountRevokeAuthority,
            TAccountMetadata,
            TAccountMint
          >,
          TReturn
        >)
    | RevokeCollectionAuthorityInput<
        TAccountCollectionAuthorityRecord,
        TAccountDelegateAuthority,
        TAccountRevokeAuthority,
        TAccountMetadata,
        TAccountMint
      >,
  rawInput?: RevokeCollectionAuthorityInput<
    TAccountCollectionAuthorityRecord,
    TAccountDelegateAuthority,
    TAccountRevokeAuthority,
    TAccountMetadata,
    TAccountMint
  >
): Promise<
  | TReturn
  | WrappedInstruction<
      RevokeCollectionAuthorityInstruction<
        TProgram,
        TAccountCollectionAuthorityRecord,
        TAccountDelegateAuthority,
        TAccountRevokeAuthority,
        TAccountMetadata,
        TAccountMint
      >
    >
> {
  const context = (rawInput === undefined ? {} : rawInput) as
    | Pick<Context, 'getProgramAddress'>
    | (Pick<Context, 'getProgramAddress'> &
        CustomGeneratedInstruction<
          RevokeCollectionAuthorityInstruction<
            TProgram,
            TAccountCollectionAuthorityRecord,
            TAccountDelegateAuthority,
            TAccountRevokeAuthority,
            TAccountMetadata,
            TAccountMint
          >,
          TReturn
        >);
  const input = (
    rawInput === undefined ? rawContext : rawInput
  ) as RevokeCollectionAuthorityInput<
    TAccountCollectionAuthorityRecord,
    TAccountDelegateAuthority,
    TAccountRevokeAuthority,
    TAccountMetadata,
    TAccountMint
  >;

  const defaultProgramAddress =
    'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s' as Base58EncodedAddress<'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s'>;
  const programAddress = (
    context.getProgramAddress
      ? await context.getProgramAddress({
          name: 'mplTokenMetadata',
          address: defaultProgramAddress,
        })
      : defaultProgramAddress
  ) as Base58EncodedAddress<TProgram>;

  return {
    instruction: revokeCollectionAuthorityInstruction(
      input as any,
      input,
      programAddress
    ),
    signers: [],
    bytesCreatedOnChain: 0,
  };
}
