/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Base58EncodedAddress, address } from '@solana/addresses';
import {
  Codec,
  Decoder,
  Encoder,
  combineCodec,
  mapEncoder,
} from '@solana/codecs-core';
import {
  getStructDecoder,
  getStructEncoder,
} from '@solana/codecs-data-structures';
import { getU8Decoder, getU8Encoder } from '@solana/codecs-numbers';
import {
  AccountRole,
  IInstruction,
  IInstructionWithAccounts,
  IInstructionWithData,
  ReadonlyAccount,
  ReadonlySignerAccount,
  WritableAccount,
  WritableSignerAccount,
} from '@solana/instructions';
import {
  Context,
  Pda,
  PublicKey,
  Signer,
  TransactionBuilder,
  transactionBuilder,
} from 'umi';
import { Serializer } from 'umiSerializers';
import {
  ResolvedAccount,
  ResolvedAccountsWithIndices,
  getAccountMetasAndSigners,
} from '../shared';
import {
  RevokeArgs,
  RevokeArgsArgs,
  getRevokeArgsDecoder,
  getRevokeArgsEncoder,
} from '../types';

// Output.
export type RevokeInstruction<
  TProgram extends string = 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',
  TAccountDelegateRecord extends string = string,
  TAccountDelegate extends string = string,
  TAccountMetadata extends string = string,
  TAccountMasterEdition extends string = string,
  TAccountMint extends string = string,
  TAccountToken extends string = string,
  TAccountAuthority extends string = string,
  TAccountPayer extends string = string,
  TAccountSystemProgram extends string = '11111111111111111111111111111111',
  TAccountSysvarInstructions extends string = 'Sysvar1nstructions1111111111111111111111111',
  TAccountSplTokenProgram extends string = string,
  TAccountAuthorizationRulesProgram extends string = string,
  TAccountAuthorizationRules extends string = string
> = IInstruction<TProgram> &
  IInstructionWithData<RevokeInstructionData> &
  IInstructionWithAccounts<
    [
      WritableAccount<TAccountDelegateRecord>,
      ReadonlyAccount<TAccountDelegate>,
      WritableAccount<TAccountMetadata>,
      ReadonlyAccount<TAccountMasterEdition>,
      ReadonlyAccount<TAccountMint>,
      WritableAccount<TAccountToken>,
      ReadonlySignerAccount<TAccountAuthority>,
      WritableSignerAccount<TAccountPayer>,
      ReadonlyAccount<TAccountSystemProgram>,
      ReadonlyAccount<TAccountSysvarInstructions>,
      ReadonlyAccount<TAccountSplTokenProgram>,
      ReadonlyAccount<TAccountAuthorizationRulesProgram>,
      ReadonlyAccount<TAccountAuthorizationRules>
    ]
  >;

export type RevokeInstructionData = {
  discriminator: number;
  revokeArgs: RevokeArgs;
};

export type RevokeInstructionDataArgs = { revokeArgs: RevokeArgsArgs };

export function getRevokeInstructionDataEncoder(): Encoder<RevokeInstructionDataArgs> {
  return mapEncoder(
    getStructEncoder<RevokeInstructionData>(
      [
        ['discriminator', getU8Encoder()],
        ['revokeArgs', getRevokeArgsEncoder()],
      ],
      { description: 'RevokeInstructionData' }
    ),
    (value) => ({ ...value, discriminator: 49 } as RevokeInstructionData)
  ) as Encoder<RevokeInstructionDataArgs>;
}

export function getRevokeInstructionDataDecoder(): Decoder<RevokeInstructionData> {
  return getStructDecoder<RevokeInstructionData>(
    [
      ['discriminator', getU8Decoder()],
      ['revokeArgs', getRevokeArgsDecoder()],
    ],
    { description: 'RevokeInstructionData' }
  ) as Decoder<RevokeInstructionData>;
}

export function getRevokeInstructionDataCodec(): Codec<
  RevokeInstructionDataArgs,
  RevokeInstructionData
> {
  return combineCodec(
    getRevokeInstructionDataEncoder(),
    getRevokeInstructionDataDecoder()
  );
}

export function revokeInstruction<
  TProgram extends string = 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',
  TAccountDelegateRecord extends string = string,
  TAccountDelegate extends string = string,
  TAccountMetadata extends string = string,
  TAccountMasterEdition extends string = string,
  TAccountMint extends string = string,
  TAccountToken extends string = string,
  TAccountAuthority extends string = string,
  TAccountPayer extends string = string,
  TAccountSystemProgram extends string = '11111111111111111111111111111111',
  TAccountSysvarInstructions extends string = 'Sysvar1nstructions1111111111111111111111111',
  TAccountSplTokenProgram extends string = string,
  TAccountAuthorizationRulesProgram extends string = string,
  TAccountAuthorizationRules extends string = string
>(
  accounts: {
    delegateRecord: Base58EncodedAddress<TAccountDelegateRecord>;
    delegate: Base58EncodedAddress<TAccountDelegate>;
    metadata: Base58EncodedAddress<TAccountMetadata>;
    masterEdition: Base58EncodedAddress<TAccountMasterEdition>;
    mint: Base58EncodedAddress<TAccountMint>;
    token: Base58EncodedAddress<TAccountToken>;
    authority: Base58EncodedAddress<TAccountAuthority>;
    payer: Base58EncodedAddress<TAccountPayer>;
    systemProgram: Base58EncodedAddress<TAccountSystemProgram>;
    sysvarInstructions: Base58EncodedAddress<TAccountSysvarInstructions>;
    splTokenProgram: Base58EncodedAddress<TAccountSplTokenProgram>;
    authorizationRulesProgram: Base58EncodedAddress<TAccountAuthorizationRulesProgram>;
    authorizationRules: Base58EncodedAddress<TAccountAuthorizationRules>;
  },
  args: RevokeInstructionDataArgs,
  programAddress: Base58EncodedAddress<TProgram> = 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s' as Base58EncodedAddress<TProgram>
): RevokeInstruction<
  TProgram,
  TAccountDelegateRecord,
  TAccountDelegate,
  TAccountMetadata,
  TAccountMasterEdition,
  TAccountMint,
  TAccountToken,
  TAccountAuthority,
  TAccountPayer,
  TAccountSystemProgram,
  TAccountSysvarInstructions,
  TAccountSplTokenProgram,
  TAccountAuthorizationRulesProgram,
  TAccountAuthorizationRules
> {
  return {
    accounts: [
      { address: accounts.delegateRecord, role: AccountRole.WRITABLE_SIGNER },
      { address: accounts.delegate, role: AccountRole.WRITABLE_SIGNER },
      { address: accounts.metadata, role: AccountRole.WRITABLE_SIGNER },
      { address: accounts.masterEdition, role: AccountRole.WRITABLE_SIGNER },
      { address: accounts.mint, role: AccountRole.WRITABLE_SIGNER },
      { address: accounts.token, role: AccountRole.WRITABLE_SIGNER },
      { address: accounts.authority, role: AccountRole.WRITABLE_SIGNER },
      { address: accounts.payer, role: AccountRole.WRITABLE_SIGNER },
      { address: accounts.systemProgram, role: AccountRole.WRITABLE_SIGNER },
      {
        address: accounts.sysvarInstructions,
        role: AccountRole.WRITABLE_SIGNER,
      },
      { address: accounts.splTokenProgram, role: AccountRole.WRITABLE_SIGNER },
      {
        address: accounts.authorizationRulesProgram,
        role: AccountRole.WRITABLE_SIGNER,
      },
      {
        address: accounts.authorizationRules,
        role: AccountRole.WRITABLE_SIGNER,
      },
    ],
    data: getRevokeInstructionDataEncoder().encode(args),
    programAddress,
  };
}
