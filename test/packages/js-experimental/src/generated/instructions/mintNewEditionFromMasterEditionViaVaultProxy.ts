/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Base58EncodedAddress } from '@solana/addresses';
import {
  Codec,
  Decoder,
  Encoder,
  combineCodec,
  mapEncoder,
} from '@solana/codecs-core';
import {
  getStructDecoder,
  getStructEncoder,
} from '@solana/codecs-data-structures';
import { getU8Decoder, getU8Encoder } from '@solana/codecs-numbers';
import {
  AccountRole,
  IInstruction,
  IInstructionWithAccounts,
  IInstructionWithData,
  ReadonlyAccount,
  ReadonlySignerAccount,
  WritableAccount,
  WritableSignerAccount,
} from '@solana/instructions';
import {
  Context,
  Pda,
  PublicKey,
  Signer,
  TransactionBuilder,
  transactionBuilder,
} from 'umi';
import { Serializer } from 'umiSerializers';
import {
  ResolvedAccount,
  ResolvedAccountsWithIndices,
  getAccountMetasAndSigners,
} from '../shared';
import {
  MintNewEditionFromMasterEditionViaTokenArgs,
  MintNewEditionFromMasterEditionViaTokenArgsArgs,
  getMintNewEditionFromMasterEditionViaTokenArgsDecoder,
  getMintNewEditionFromMasterEditionViaTokenArgsEncoder,
} from '../types';

// Output.
export type MintNewEditionFromMasterEditionViaVaultProxyInstruction<
  TProgram extends string = 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',
  TAccountNewMetadata extends string = string,
  TAccountNewEdition extends string = string,
  TAccountMasterEdition extends string = string,
  TAccountNewMint extends string = string,
  TAccountEditionMarkPda extends string = string,
  TAccountNewMintAuthority extends string = string,
  TAccountPayer extends string = string,
  TAccountVaultAuthority extends string = string,
  TAccountSafetyDepositStore extends string = string,
  TAccountSafetyDepositBox extends string = string,
  TAccountVault extends string = string,
  TAccountNewMetadataUpdateAuthority extends string = string,
  TAccountMetadata extends string = string,
  TAccountTokenProgram extends string = 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',
  TAccountTokenVaultProgram extends string = string,
  TAccountSystemProgram extends string = '11111111111111111111111111111111',
  TAccountRent extends string = string
> = IInstruction<TProgram> &
  IInstructionWithData<MintNewEditionFromMasterEditionViaVaultProxyInstructionData> &
  IInstructionWithAccounts<
    [
      WritableAccount<TAccountNewMetadata>,
      WritableAccount<TAccountNewEdition>,
      WritableAccount<TAccountMasterEdition>,
      WritableAccount<TAccountNewMint>,
      WritableAccount<TAccountEditionMarkPda>,
      ReadonlySignerAccount<TAccountNewMintAuthority>,
      WritableSignerAccount<TAccountPayer>,
      ReadonlySignerAccount<TAccountVaultAuthority>,
      ReadonlyAccount<TAccountSafetyDepositStore>,
      ReadonlyAccount<TAccountSafetyDepositBox>,
      ReadonlyAccount<TAccountVault>,
      ReadonlyAccount<TAccountNewMetadataUpdateAuthority>,
      ReadonlyAccount<TAccountMetadata>,
      ReadonlyAccount<TAccountTokenProgram>,
      ReadonlyAccount<TAccountTokenVaultProgram>,
      ReadonlyAccount<TAccountSystemProgram>,
      ReadonlyAccount<TAccountRent>
    ]
  >;

export type MintNewEditionFromMasterEditionViaVaultProxyInstructionData = {
  discriminator: number;
  mintNewEditionFromMasterEditionViaTokenArgs: MintNewEditionFromMasterEditionViaTokenArgs;
};

export type MintNewEditionFromMasterEditionViaVaultProxyInstructionDataArgs = {
  mintNewEditionFromMasterEditionViaTokenArgs: MintNewEditionFromMasterEditionViaTokenArgsArgs;
};

export function getMintNewEditionFromMasterEditionViaVaultProxyInstructionDataEncoder(): Encoder<MintNewEditionFromMasterEditionViaVaultProxyInstructionDataArgs> {
  return mapEncoder(
    getStructEncoder<MintNewEditionFromMasterEditionViaVaultProxyInstructionData>(
      [
        ['discriminator', getU8Encoder()],
        [
          'mintNewEditionFromMasterEditionViaTokenArgs',
          getMintNewEditionFromMasterEditionViaTokenArgsEncoder(),
        ],
      ],
      {
        description:
          'MintNewEditionFromMasterEditionViaVaultProxyInstructionData',
      }
    ),
    (value) =>
      ({
        ...value,
        discriminator: 13,
      } as MintNewEditionFromMasterEditionViaVaultProxyInstructionData)
  ) as Encoder<MintNewEditionFromMasterEditionViaVaultProxyInstructionDataArgs>;
}

export function getMintNewEditionFromMasterEditionViaVaultProxyInstructionDataDecoder(): Decoder<MintNewEditionFromMasterEditionViaVaultProxyInstructionData> {
  return getStructDecoder<MintNewEditionFromMasterEditionViaVaultProxyInstructionData>(
    [
      ['discriminator', getU8Decoder()],
      [
        'mintNewEditionFromMasterEditionViaTokenArgs',
        getMintNewEditionFromMasterEditionViaTokenArgsDecoder(),
      ],
    ],
    {
      description:
        'MintNewEditionFromMasterEditionViaVaultProxyInstructionData',
    }
  ) as Decoder<MintNewEditionFromMasterEditionViaVaultProxyInstructionData>;
}

export function getMintNewEditionFromMasterEditionViaVaultProxyInstructionDataCodec(): Codec<
  MintNewEditionFromMasterEditionViaVaultProxyInstructionDataArgs,
  MintNewEditionFromMasterEditionViaVaultProxyInstructionData
> {
  return combineCodec(
    getMintNewEditionFromMasterEditionViaVaultProxyInstructionDataEncoder(),
    getMintNewEditionFromMasterEditionViaVaultProxyInstructionDataDecoder()
  );
}

export function mintNewEditionFromMasterEditionViaVaultProxyInstruction<
  TProgram extends string = 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',
  TAccountNewMetadata extends string = string,
  TAccountNewEdition extends string = string,
  TAccountMasterEdition extends string = string,
  TAccountNewMint extends string = string,
  TAccountEditionMarkPda extends string = string,
  TAccountNewMintAuthority extends string = string,
  TAccountPayer extends string = string,
  TAccountVaultAuthority extends string = string,
  TAccountSafetyDepositStore extends string = string,
  TAccountSafetyDepositBox extends string = string,
  TAccountVault extends string = string,
  TAccountNewMetadataUpdateAuthority extends string = string,
  TAccountMetadata extends string = string,
  TAccountTokenProgram extends string = 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',
  TAccountTokenVaultProgram extends string = string,
  TAccountSystemProgram extends string = '11111111111111111111111111111111',
  TAccountRent extends string = string
>(
  accounts: {
    newMetadata: Base58EncodedAddress<TAccountNewMetadata>;
    newEdition: Base58EncodedAddress<TAccountNewEdition>;
    masterEdition: Base58EncodedAddress<TAccountMasterEdition>;
    newMint: Base58EncodedAddress<TAccountNewMint>;
    editionMarkPda: Base58EncodedAddress<TAccountEditionMarkPda>;
    newMintAuthority: Base58EncodedAddress<TAccountNewMintAuthority>;
    payer: Base58EncodedAddress<TAccountPayer>;
    vaultAuthority: Base58EncodedAddress<TAccountVaultAuthority>;
    safetyDepositStore: Base58EncodedAddress<TAccountSafetyDepositStore>;
    safetyDepositBox: Base58EncodedAddress<TAccountSafetyDepositBox>;
    vault: Base58EncodedAddress<TAccountVault>;
    newMetadataUpdateAuthority: Base58EncodedAddress<TAccountNewMetadataUpdateAuthority>;
    metadata: Base58EncodedAddress<TAccountMetadata>;
    tokenProgram: Base58EncodedAddress<TAccountTokenProgram>;
    tokenVaultProgram: Base58EncodedAddress<TAccountTokenVaultProgram>;
    systemProgram: Base58EncodedAddress<TAccountSystemProgram>;
    rent: Base58EncodedAddress<TAccountRent>;
  },
  args: MintNewEditionFromMasterEditionViaVaultProxyInstructionDataArgs,
  programAddress: Base58EncodedAddress<TProgram> = 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s' as Base58EncodedAddress<TProgram>
): MintNewEditionFromMasterEditionViaVaultProxyInstruction<
  TProgram,
  TAccountNewMetadata,
  TAccountNewEdition,
  TAccountMasterEdition,
  TAccountNewMint,
  TAccountEditionMarkPda,
  TAccountNewMintAuthority,
  TAccountPayer,
  TAccountVaultAuthority,
  TAccountSafetyDepositStore,
  TAccountSafetyDepositBox,
  TAccountVault,
  TAccountNewMetadataUpdateAuthority,
  TAccountMetadata,
  TAccountTokenProgram,
  TAccountTokenVaultProgram,
  TAccountSystemProgram,
  TAccountRent
> {
  return {
    accounts: [
      { address: accounts.newMetadata, role: AccountRole.WRITABLE_SIGNER },
      { address: accounts.newEdition, role: AccountRole.WRITABLE_SIGNER },
      { address: accounts.masterEdition, role: AccountRole.WRITABLE_SIGNER },
      { address: accounts.newMint, role: AccountRole.WRITABLE_SIGNER },
      { address: accounts.editionMarkPda, role: AccountRole.WRITABLE_SIGNER },
      { address: accounts.newMintAuthority, role: AccountRole.WRITABLE_SIGNER },
      { address: accounts.payer, role: AccountRole.WRITABLE_SIGNER },
      { address: accounts.vaultAuthority, role: AccountRole.WRITABLE_SIGNER },
      {
        address: accounts.safetyDepositStore,
        role: AccountRole.WRITABLE_SIGNER,
      },
      { address: accounts.safetyDepositBox, role: AccountRole.WRITABLE_SIGNER },
      { address: accounts.vault, role: AccountRole.WRITABLE_SIGNER },
      {
        address: accounts.newMetadataUpdateAuthority,
        role: AccountRole.WRITABLE_SIGNER,
      },
      { address: accounts.metadata, role: AccountRole.WRITABLE_SIGNER },
      { address: accounts.tokenProgram, role: AccountRole.WRITABLE_SIGNER },
      {
        address: accounts.tokenVaultProgram,
        role: AccountRole.WRITABLE_SIGNER,
      },
      { address: accounts.systemProgram, role: AccountRole.WRITABLE_SIGNER },
      { address: accounts.rent, role: AccountRole.WRITABLE_SIGNER },
    ],
    data: getMintNewEditionFromMasterEditionViaVaultProxyInstructionDataEncoder().encode(
      args
    ),
    programAddress,
  };
}
