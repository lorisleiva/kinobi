/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import {
  Base58EncodedAddress,
  getAddressDecoder,
  getAddressEncoder,
} from '@solana/addresses';
import {
  Codec,
  Decoder,
  Encoder,
  combineCodec,
  mapEncoder,
} from '@solana/codecs-core';
import {
  getStructDecoder,
  getStructEncoder,
} from '@solana/codecs-data-structures';
import { getU8Decoder, getU8Encoder } from '@solana/codecs-numbers';
import {
  Context,
  Pda,
  PublicKey,
  RpcAccount,
  RpcGetAccountOptions,
  RpcGetAccountsOptions,
  assertAccountExists,
  deserializeAccount,
  gpaBuilder,
  publicKey as toPublicKey,
} from 'umi';
import { Serializer } from 'umiSerializers';
import { Account } from '../shared';
import {
  EscrowAuthority,
  EscrowAuthorityArgs,
  TmKey,
  TmKeyArgs,
  getEscrowAuthorityDecoder,
  getEscrowAuthorityEncoder,
  getTmKeyDecoder,
  getTmKeyEncoder,
} from '../types';

export type TokenOwnedEscrow = Account<TokenOwnedEscrowAccountData>;

export type TokenOwnedEscrowAccountData = {
  key: TmKey;
  baseToken: Base58EncodedAddress;
  authority: EscrowAuthority;
  bump: number;
};

export type TokenOwnedEscrowAccountDataArgs = {
  baseToken: Base58EncodedAddress;
  authority: EscrowAuthorityArgs;
  bump: number;
};

export function getTokenOwnedEscrowAccountDataEncoder(): Encoder<TokenOwnedEscrowAccountDataArgs> {
  return mapEncoder(
    getStructEncoder<TokenOwnedEscrowAccountData>(
      [
        ['key', getTmKeyEncoder()],
        ['baseToken', getAddressEncoder()],
        ['authority', getEscrowAuthorityEncoder()],
        ['bump', getU8Encoder()],
      ],
      { description: 'TokenOwnedEscrowAccountData' }
    ),
    (value) => ({ ...value, key: TmKey.TokenOwnedEscrow })
  ) as Encoder<TokenOwnedEscrowAccountDataArgs>;
}

export function getTokenOwnedEscrowAccountDataDecoder(): Decoder<TokenOwnedEscrowAccountData> {
  return getStructDecoder<TokenOwnedEscrowAccountData>(
    [
      ['key', getTmKeyDecoder()],
      ['baseToken', getAddressDecoder()],
      ['authority', getEscrowAuthorityDecoder()],
      ['bump', getU8Decoder()],
    ],
    { description: 'TokenOwnedEscrowAccountData' }
  ) as Decoder<TokenOwnedEscrowAccountData>;
}

export function getTokenOwnedEscrowAccountDataCodec(): Codec<
  TokenOwnedEscrowAccountDataArgs,
  TokenOwnedEscrowAccountData
> {
  return combineCodec(
    getTokenOwnedEscrowAccountDataEncoder(),
    getTokenOwnedEscrowAccountDataDecoder()
  );
}
