/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import {
  Base58EncodedAddress,
  getAddressDecoder,
  getAddressEncoder,
} from '@solana/addresses';
import {
  Codec,
  Decoder,
  Encoder,
  combineCodec,
  mapEncoder,
} from '@solana/codecs-core';
import {
  getStructDecoder,
  getStructEncoder,
} from '@solana/codecs-data-structures';
import { getU64Decoder, getU64Encoder } from '@solana/codecs-numbers';
import {
  Context,
  Pda,
  PublicKey,
  RpcAccount,
  RpcGetAccountOptions,
  RpcGetAccountsOptions,
  assertAccountExists,
  deserializeAccount,
  gpaBuilder,
  publicKey as toPublicKey,
} from 'umi';
import { Serializer } from 'umiSerializers';
import { Account } from '../shared';
import { TmKey, TmKeyArgs, getTmKeyDecoder, getTmKeyEncoder } from '../types';

export type Edition = Account<EditionAccountData>;

export type EditionAccountData = {
  key: TmKey;
  parent: Base58EncodedAddress;
  edition: bigint;
};

export type EditionAccountDataArgs = {
  parent: Base58EncodedAddress;
  edition: number | bigint;
};

export function getEditionAccountDataEncoder(): Encoder<EditionAccountDataArgs> {
  return mapEncoder(
    getStructEncoder<EditionAccountData>(
      [
        ['key', getTmKeyEncoder()],
        ['parent', getAddressEncoder()],
        ['edition', getU64Encoder()],
      ],
      { description: 'EditionAccountData' }
    ),
    (value) => ({ ...value, key: TmKey.EditionV1 } as EditionAccountData)
  ) as Encoder<EditionAccountDataArgs>;
}

export function getEditionAccountDataDecoder(): Decoder<EditionAccountData> {
  return getStructDecoder<EditionAccountData>(
    [
      ['key', getTmKeyDecoder()],
      ['parent', getAddressDecoder()],
      ['edition', getU64Decoder()],
    ],
    { description: 'EditionAccountData' }
  ) as Decoder<EditionAccountData>;
}

export function getEditionAccountDataCodec(): Codec<
  EditionAccountDataArgs,
  EditionAccountData
> {
  return combineCodec(
    getEditionAccountDataEncoder(),
    getEditionAccountDataDecoder()
  );
}
