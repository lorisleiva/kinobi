/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import {
  Base58EncodedAddress,
  getAddressDecoder,
  getAddressEncoder,
} from '@solana/addresses';
import { Codec, Decoder, Encoder, combineCodec } from '@solana/codecs-core';
import {
  getBooleanDecoder,
  getBooleanEncoder,
  getStructDecoder,
  getStructEncoder,
} from '@solana/codecs-data-structures';
import {
  getU32Decoder,
  getU32Encoder,
  getU64Decoder,
  getU64Encoder,
  getU8Decoder,
  getU8Encoder,
} from '@solana/codecs-numbers';
import {
  Option,
  OptionOrNullable,
  getOptionDecoder,
  getOptionEncoder,
} from '@solana/options';
import {
  Context,
  Pda,
  PublicKey,
  RpcAccount,
  RpcGetAccountOptions,
  RpcGetAccountsOptions,
  assertAccountExists,
  deserializeAccount,
  gpaBuilder,
  publicKey as toPublicKey,
} from 'umi';
import { Serializer } from 'umiSerializers';
import { Account } from '../shared';

export type Mint = Account<MintAccountData>;

export type MintAccountData = {
  mintAuthority: Option<Base58EncodedAddress>;
  supply: bigint;
  decimals: number;
  isInitialized: boolean;
  freezeAuthority: Option<Base58EncodedAddress>;
};

export type MintAccountDataArgs = {
  mintAuthority: OptionOrNullable<Base58EncodedAddress>;
  supply: number | bigint;
  decimals: number;
  isInitialized: boolean;
  freezeAuthority: OptionOrNullable<Base58EncodedAddress>;
};

export function getMintAccountDataEncoder(): Encoder<MintAccountDataArgs> {
  return getStructEncoder<MintAccountData>(
    [
      [
        'mintAuthority',
        getOptionEncoder(getAddressEncoder(), {
          prefix: getU32Encoder(),
          fixed: true,
        }),
      ],
      ['supply', getU64Encoder()],
      ['decimals', getU8Encoder()],
      ['isInitialized', getBooleanEncoder()],
      [
        'freezeAuthority',
        getOptionEncoder(getAddressEncoder(), {
          prefix: getU32Encoder(),
          fixed: true,
        }),
      ],
    ],
    { description: 'MintAccountData' }
  ) as Encoder<MintAccountDataArgs>;
}

export function getMintAccountDataDecoder(): Decoder<MintAccountData> {
  return getStructDecoder<MintAccountData>(
    [
      [
        'mintAuthority',
        getOptionDecoder(getAddressDecoder(), {
          prefix: getU32Decoder(),
          fixed: true,
        }),
      ],
      ['supply', getU64Decoder()],
      ['decimals', getU8Decoder()],
      ['isInitialized', getBooleanDecoder()],
      [
        'freezeAuthority',
        getOptionDecoder(getAddressDecoder(), {
          prefix: getU32Decoder(),
          fixed: true,
        }),
      ],
    ],
    { description: 'MintAccountData' }
  ) as Decoder<MintAccountData>;
}

export function getMintAccountDataCodec(): Codec<
  MintAccountDataArgs,
  MintAccountData
> {
  return combineCodec(getMintAccountDataEncoder(), getMintAccountDataDecoder());
}
