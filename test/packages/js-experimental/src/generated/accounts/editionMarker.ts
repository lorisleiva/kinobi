/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import {
  Codec,
  Decoder,
  Encoder,
  combineCodec,
  mapEncoder,
} from '@solana/codecs-core';
import {
  getArrayDecoder,
  getArrayEncoder,
  getStructDecoder,
  getStructEncoder,
} from '@solana/codecs-data-structures';
import { getU8Decoder, getU8Encoder } from '@solana/codecs-numbers';
import {
  Context,
  Pda,
  PublicKey,
  RpcAccount,
  RpcGetAccountOptions,
  RpcGetAccountsOptions,
  assertAccountExists,
  deserializeAccount,
  gpaBuilder,
  publicKey as toPublicKey,
} from 'umi';
import { Serializer } from 'umiSerializers';
import { Account } from '../shared';
import { TmKey, TmKeyArgs, getTmKeyDecoder, getTmKeyEncoder } from '../types';

export type EditionMarker = Account<EditionMarkerAccountData>;

export type EditionMarkerAccountData = { key: TmKey; ledger: Array<number> };

export type EditionMarkerAccountDataArgs = { ledger: Array<number> };

export function getEditionMarkerAccountDataEncoder(): Encoder<EditionMarkerAccountDataArgs> {
  return mapEncoder(
    getStructEncoder<EditionMarkerAccountData>(
      [
        ['key', getTmKeyEncoder()],
        ['ledger', getArrayEncoder(getU8Encoder(), { size: 31 })],
      ],
      { description: 'EditionMarkerAccountData' }
    ),
    (value) =>
      ({ ...value, key: TmKey.EditionMarker } as EditionMarkerAccountData)
  ) as Encoder<EditionMarkerAccountDataArgs>;
}

export function getEditionMarkerAccountDataDecoder(): Decoder<EditionMarkerAccountData> {
  return getStructDecoder<EditionMarkerAccountData>(
    [
      ['key', getTmKeyDecoder()],
      ['ledger', getArrayDecoder(getU8Decoder(), { size: 31 })],
    ],
    { description: 'EditionMarkerAccountData' }
  ) as Decoder<EditionMarkerAccountData>;
}

export function getEditionMarkerAccountDataCodec(): Codec<
  EditionMarkerAccountDataArgs,
  EditionMarkerAccountData
> {
  return combineCodec(
    getEditionMarkerAccountDataEncoder(),
    getEditionMarkerAccountDataDecoder()
  );
}
