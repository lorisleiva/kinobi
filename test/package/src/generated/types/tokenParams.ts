/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Context, PublicKey, Serializer } from '@metaplex-foundation/umi';

export type TokenParams = {
  decimals: number;
  vaultBump: number;
  mintKey: PublicKey;
  vaultKey: PublicKey;
};

export type TokenParamsArgs = TokenParams;

export function getTokenParamsSerializer(
  context: Pick<Context, 'serializer'>
): Serializer<TokenParamsArgs, TokenParams> {
  const s = context.serializer;
  return s.struct<TokenParams>(
    [
      ['decimals', s.u32()],
      ['vaultBump', s.u32()],
      ['mintKey', s.publicKey()],
      ['vaultKey', s.publicKey()],
    ],
    { description: 'TokenParams' }
  ) as Serializer<TokenParamsArgs, TokenParams>;
}
