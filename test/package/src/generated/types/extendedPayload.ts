/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import {
  Serializer,
  map,
  string,
  struct,
  tuple,
  u8,
} from '@metaplex-foundation/umi/serializers';
import {
  PayloadKey,
  PayloadKeyArgs,
  PayloadType,
  PayloadTypeArgs,
  getPayloadKeySerializer,
  getPayloadTypeSerializer,
} from '.';

export type ExtendedPayload = {
  map: Map<PayloadKey, PayloadType>;
  args: [number, string];
};

export type ExtendedPayloadArgs = {
  map: Map<PayloadKeyArgs, PayloadTypeArgs>;
  args: [number, string];
};

/** @deprecated Use `getExtendedPayloadSerializer()` without any argument instead. */
export function getExtendedPayloadSerializer(
  _context: object
): Serializer<ExtendedPayloadArgs, ExtendedPayload>;
export function getExtendedPayloadSerializer(): Serializer<
  ExtendedPayloadArgs,
  ExtendedPayload
>;
export function getExtendedPayloadSerializer(
  _context: object = {}
): Serializer<ExtendedPayloadArgs, ExtendedPayload> {
  return struct<ExtendedPayload>(
    [
      ['map', map(getPayloadKeySerializer(), getPayloadTypeSerializer())],
      ['args', tuple([u8(), string()])],
    ],
    { description: 'ExtendedPayload' }
  ) as Serializer<ExtendedPayloadArgs, ExtendedPayload>;
}
