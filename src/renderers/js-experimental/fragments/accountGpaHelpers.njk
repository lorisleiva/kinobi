export function get{{ pascalCaseName }}GpaBuilder(context: Pick<Context, 'rpc' | 'programs'>) {
  const programId = context.programs.getPublicKey('{{ program.name | camelCase }}', '{{ program.publicKey }}');
  return gpaBuilder(context, programId)
    .registerFields<{{ gpaFields.type }}>({{ gpaFields.argument }})
    .deserializeUsing<{{ pascalCaseName }}>((account) => deserialize{{ pascalCaseName }}(account))
    {%- if discriminator.kind === 'field' %}
      .whereField('{{ discriminator.name }}', {{ discriminator.value }})
    {% elif discriminator.kind === 'size' %}
      .whereSize({{ discriminator.value }})
    {% endif -%}
  ;
}
