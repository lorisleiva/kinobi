{% set hasResolvedAccounts = accounts.length > 0 or instruction.hasResolvers %}
{% set hasResolvedArgs = instruction.hasArgs or instruction.hasArgDefaults or instruction.hasResolvers %}
{% macro getAccountObject(name, accountsObj) -%}
  {{ 'resolvedAccounts' if accountsWithDefaults.includes(name) else accountsObj }}
{%- endmacro %}
{% macro getArgObject(name, argsObj) -%}
  {{ 'resolvedArgs' if argsWithDefaults.includes(name) else argsObj }}
{%- endmacro %}

{% if resolvedInputs.length > 0 or hasResolvedAccounts or hasResolvedArgs %}
  // Resolved inputs.
  {% if hasResolvedAccounts %}
    const resolvedAccounts = {};
  {% endif %}
  {% if hasResolvedArgs %}
    const resolvedArgs = {};
  {% endif %}
  {% for input in resolvedInputsWithDefaults %}
    {% if input.kind === 'account' %}
      {% set accountPrefix %}resolvedAccounts, '{{ input.name | camelCase }}', {{ accountsObj }}.{{ input.name | camelCase }} ??{% endset %}
      {% if input.defaultsTo.kind === 'account' %}
        addObjectProperty({{ accountPrefix }} {{ getAccountObject(input.defaultsTo.name, accountsObj) }}.{{ input.defaultsTo.name | camelCase }});
      {% elif input.defaultsTo.kind === 'pda' %}
        addObjectProperty({{ accountPrefix }} find{{ input.defaultsTo.pdaAccount | pascalCase }}Pda(context,
        {%- if (input.defaultsTo.seeds | length) > 0 -%}
          {
            {%- for seedKey, seedValue in input.defaultsTo.seeds -%}
              {%- if seedValue.kind === 'value' -%}
                {{ seedKey }}: {{ seedValue.render }},
              {%- elif seedValue.kind === 'account' -%}
                {{ seedKey }}: publicKey({{ getAccountObject(seedValue.name, accountsObj) }}.{{ seedValue.name | camelCase }}),
              {%- else -%}
                {{ seedKey }}: {{ getArgObject(seedValue.name, accountsObj) }}.{{ seedValue.name | camelCase }},
              {%- endif -%}
            {%- endfor -%}
          }
        {%- endif -%}
        ));
      {% elif input.defaultsTo.kind === 'publicKey' %}
        addObjectProperty({{ accountPrefix }} publicKey('{{ input.defaultsTo.publicKey }}');
      {% elif input.defaultsTo.kind === 'program' %}
        addObjectProperty({{ accountPrefix }} { ...context.programs.getPublicKey('{{ input.defaultsTo.program.name }}', '{{ input.defaultsTo.program.publicKey }}'), isWritable: false });
      {% elif input.defaultsTo.kind === 'programId' %}
        addObjectProperty({{ accountPrefix }} programId);
      {% elif input.defaultsTo.kind === 'identity' and (input.isSigner !== false) %}
        addObjectProperty({{ accountPrefix }} context.identity);
      {% elif input.defaultsTo.kind === 'identity' %}
        addObjectProperty({{ accountPrefix }} context.identity.publicKey);
      {% elif input.defaultsTo.kind === 'payer' and (input.isSigner !== false) %}
        addObjectProperty({{ accountPrefix }} context.payer);
      {% elif input.defaultsTo.kind === 'payer' %}
        addObjectProperty({{ accountPrefix }} context.payer.publicKey);
      {% elif input.defaultsTo.kind === 'resolver' %}
        addObjectProperty({{ accountPrefix }} {{ input.defaultsTo.name | camelCase }}(context, { ...{{ accountsObj }}, ...resolvedAccounts }, { ...{{ argsObj }}, ...resolvedArgs }, programId));
      {% endif %}
    {% elif input.kind === 'arg' %}
      {% set argPrefix %}resolvedArgs, '{{ input.name | camelCase }}', {{ argsObj }}.{{ input.name | camelCase }} ??{% endset %}
      {% if input.defaultsTo.kind === 'arg' %}
        addObjectProperty({{ argPrefix }} {{ getArgObject(input.defaultsTo.name, argsObj) }}.{{ input.defaultsTo.name | camelCase }});
      {% elif input.defaultsTo.kind === 'account' %}
        addObjectProperty({{ argPrefix }} {{ getAccountObject(input.defaultsTo.name, accountsObj) }}.{{ input.defaultsTo.name | camelCase }});
      {% elif input.defaultsTo.kind === 'accountBump' %}
        addObjectProperty({{ argPrefix }} {{ getAccountObject(input.defaultsTo.name, accountsObj) }}.{{ input.defaultsTo.name | camelCase }}.bump);
      {% elif input.defaultsTo.kind === 'value' %}
        addObjectProperty({{ argPrefix }} {{ input.defaultsTo.render }});
      {% elif input.defaultsTo.kind === 'resolver' %}
        addObjectProperty({{ argPrefix }} {{ input.defaultsTo.name | camelCase }}(context, { ...{{ accountsObj }}, ...resolvedAccounts }, { ...{{ argsObj }}, ...resolvedArgs }, programId));
      {% endif %}
    {% endif %}
  {% endfor %}
{% endif %}
