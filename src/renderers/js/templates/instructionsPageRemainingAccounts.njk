{% set remaining = instruction.remainingAccounts %}
{% macro getArgVar(name, argsObj) -%}
  {{ 'resolvedArgs' if argsWithDefaults.includes(name) else argsObj }}.{{ name | camelCase }}
{%- endmacro %}

{% if remaining.kind === 'arg' %}
  // Remaining Accounts.
  const remainingAccounts = {{ getArgVar(remaining.name, argsObj) }}.map(address => ([address, {{ "true" if remaining.isWritable else "false" }}] as const));
  remainingAccounts.forEach((remainingAccount) => addAccountMeta(keys, signers, remainingAccount, false));
{% elif remaining.kind === 'resolver' %}
  // Remaining Accounts.
  const remainingAccounts = {{ remaining.name | camelCase }}(context, resolvedAccounts, resolvedArgs, programId);
  remainingAccounts.forEach((remainingAccount) => addAccountMeta(keys, signers, remainingAccount, false));
{% endif %}
