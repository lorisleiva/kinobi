/// Instruction builder.
pub struct {{ instruction.name | pascalCase }}Builder {
{% for account in instruction.accounts %}
  {% if account.isSigner === 'either' %}
    {{ account.name | snakeCase }}: Option<(solana_program::pubkey::Pubkey, bool)>,
  {% else %}
    {{ account.name | snakeCase }}: Option<solana_program::pubkey::Pubkey>,
  {% endif %}
{% endfor %}
}

impl {{ instruction.name | pascalCase }}Builder {
  {% for account in instruction.accounts %}
    pub fn {{ account.name | snakeCase }}(&mut self, {{ account.name | snakeCase }}: solana_program::pubkey::Pubkey{{ ', as_signer: bool' if account.isSigner === 'either' }}) -> &mut Self {
      {% if account.isSigner === 'either' %}
        self.{{ account.name | snakeCase }} = Some(({{ account.name | snakeCase }}, as_signer));
      {% else %}
        self.{{ account.name | snakeCase }} = Some({{ account.name | snakeCase }});
      {% endif %}
      self
    }
  {% endfor %}
  pub fn build(&self) -> solana_program::instruction::Instruction {
    let accounts = {{ instruction.name | pascalCase }} {
        {% for account in instruction.accounts %}          
          {{ account.name | snakeCase }}: self.{{ account.name | snakeCase }}{{ '.expect(\"' + account.name | snakeCase + ' is not set\")' if account.isOptional === false }},
        {% endfor %}
    };
    accounts.instruction()
  }
}
